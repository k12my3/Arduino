#include <WiFi.h> 
#include "secrets.h" 
#include "ThingSpeak.h" // always include thingspeak header file after other header files and custom macros 
 
char ssid[] = SECRET_SSID;   // your network SSID (name)  
char pass[] = SECRET_PASS;   // your network password 
int buttonPin=15; 
int buttonState = 0;  
// your network key Index number (needed only for WEP) 
WiFiClient  client; 
 
unsigned long myChannelNumber = SECRET_CH_ID; 
const char * myWriteAPIKey = SECRET_WRITE_APIKEY; 
 
 
 
void setup() { 
  Serial.begin(115200);  //Initialize serial 
  while (!Serial) { 
    ; // wait for serial port to connect. Needed for Leonardo native USB port only 
  } 
  pinMode ( buttonPin , INPUT ); 
 
   
  WiFi.mode(WIFI_STA);    
  ThingSpeak.begin(client);  // Initialize ThingSpeak 
} 
   
void loop() 
{ 
        // Connect or reconnect to WiFi 
        if (WiFi.status()!= WL_CONNECTED)  
        { 
          Serial.print("Attempting to connect to SSID: ");  
          Serial.println(SECRET_SSID); 
          while (WiFi.status()!=WL_CONNECTED)  
          { 
              WiFi.begin(ssid, pass); // Connect to WPA/WPA2 network. Change this delay(5000): 
              Serial.print("."); 
              delay(5000); 
           }                                                 
            Serial.println("\nConnected."); 
         } 
// Write to ThingSpeak. There are up to 8 fields in a channel, allowing you to store up to different 
// pieces of information in a channel. Here, we write to field 1. 
 
       
           buttonState=digitalRead(buttonPin); 
           int t;// put your main code here, to run repeatedly: 
           if (buttonState == 1) 
               { 
                    Serial.println("HIGH"); 
                    t = 1;  
                    delay(200); 
               } 
           if (buttonState==0) 
                 { 
                   Serial.println("LOW");  
                  t = 0; 
                  delay(200); 
                    } 
 
 
 
Serial.println(t); //Print on Serial Monitor 
 
delay(1000); 
 
ThingSpeak.writeField(myChannelNumber, 1, t, myWriteAPIKey); //Update in ThingSpeak 
delay(10000); 
       }